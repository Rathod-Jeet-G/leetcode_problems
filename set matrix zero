Given an m x n integer matrix matrix, if an element is 0, set its entire row and column to 0's.

You must do it in place.

 

Example 1:
Input: matrix = [[1,1,1],[1,0,1],[1,1,1]]
Output: [[1,0,1],[0,0,0],[1,0,1]]

Example 2:
Input: matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]
Output: [[0,0,0,0],[0,4,5,0],[0,3,1,0]]

--------------------solution-------------python3------------0(n^3)------------------------- 
 n = len(matrix)
        m = len(matrix[0])

        def row(i):
            for j in range(m):
                if matrix[i][j]!=0:
                    matrix[i][j]=-11
        def col(j):
            for i in range(n):
                if matrix[i][j]!=0:
                    matrix[i][j]=-11

        for i in range(n):
            for j in range(m):
                if matrix[i][j] == 0:
                    row(i)
                    col(j)

        for i in range(n):
            for j in range(m):
                if matrix[i][j] == -11:
                    matrix[i][j]=0
        return matrix




----------solution-----------------------python3-------------------------0(n^2)-------------
  def setZeroes(self, matrix: List[List[int]]) -> None:
       n = len(matrix)
       m = len(matrix[0])
       row =[0]*n 
       col =[0]*m

       for i in range(n):
           for j in range(m):
               if matrix[i][j] == 0:
                   row[i] = 1
                   col[j] = 1



       for i in range(n):
           for j in range(m):
               if row[i] or col[i]:
                   matrix[i][j] = 0 
        return matrix
