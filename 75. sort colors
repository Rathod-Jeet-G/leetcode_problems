Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.

We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.

You must solve this problem without using the library's sort function.

 

Example 1:
Input: nums = [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]

Example 2:
Input: nums = [2,0,1]
Output: [0,1,2]
 

Constraints:
n == nums.length
1 <= n <= 300
nums[i] is either 0, 1, or 2.

---------------- Solution in python----------------------------
def sortColors(self, nums: List[int]) -> None:
        i = 0
        j = len(nums)-1
        while(i<j):
            while(i<len(nums) and nums[i]==0):
                i+=1
            while(j>=0 and nums[j]!=0):
                j-=1
            if i>=j:
                break
            nums[i],nums[j] = nums[j],nums[i]
        i=0
        while(i<len(nums)):
            if nums[i] == 0:
                i+=1
            else:
                break
        j = len(nums)-1 
        while(i<j):
            while(i<len(nums) and nums[i]==1):
                i+=1
            while(j>=0 and nums[j] != 1):
                j-=1
            if i>=j:
                break
            nums[i],nums[j] = nums[j], nums[i]
            j-=1
            i+=1
        return nums
        
